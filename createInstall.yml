- name: create ec2 instances
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:

    - name: get subnets
      ec2_vpc_subnet_facts:
        region: us-east-1
        filters:
          "tag:Name" : PrivateSubnetDev
      register: snetfacts
    
    - name: subnet id
      set_fact:
        subnet_ids: "{{ snetfacts.subnets|map(attribute='id')|list }}"

    - name: provision instances
      ec2:
        key_name: devbox
        group: DevPrivSrvr
        region: us-east-1
        instance_type: t2.micro
        image: ami-04169656fea786776
        #exact_count: 1
        count_tag:
          Name: Wordpress
        instance_tags:
          Name: wordpress
          Type: autospin
          App: wordpress
        vpc_subnet_id: "{{ subnet_ids.0 }}"
      register: ec2

    - pause:
        minutes: 1

    - name: create hostlist
      add_host:
        hostname: "{{ item.private_dns_name }}"
        groupname: ubulaunched
        ansible_ssh_user: ubuntu
      with_items: "{{ ec2.instances }}"

- name: install
  hosts: ubulaunched
  become: True
  gather_facts: false
  tasks:
  - Name: Install Python
    raw: sudo apt-get -y install python-minimal
  - Name: Install packages
    apt: 
      name: "{{ item }}"
      state: present

    with_items:
      - apache2
      - mysql-server
      - php7.0-mysql
      - php7.0
      - php7.0-gd
      - libapache2-mod-php7.0
      - python-mysqldb


- name: configure wordpress
  hosts: ubulaunched
  become: True
  gather_facts: false
  roles:
    - mysql
    - wordpress
  
- name: restart apache
  hosts: ubulaunched
  become: True
  gather_facts: false
  tasks:
    - shell: sudo systemctl restart apache2

- pause:
    minutes: 2

- name: create AMI
  ec2_ami: 
    region: us-east-1
    name: myWordpress
    instance_id: "{{ item.id }}"
    wait: yes
  with_items: "{{ ec2.instances }}"


    

        
